// --->>> ╪з╪│╪к╪о╪п┘Е ┘З╪░╪з ╪з┘Д┘Г┘И╪п ╪з┘Д┘Е╪н╪п╪л ┘Д┘Е┘Д┘Б ╪з┘Д┘Е┘Г┘И┘Ж ╪з┘Д╪▒╪ж┘К╪│┘К (Index.jsx) <<<---

import { Plus, Menu, LogOut, User } from "lucide-react";
import PhotoGrid from "@/components/PhotoGrid";
import { Button } from "@/components/ui/button";
import CreateNewDialog from "@/components/CreateNewDialog";
import { useState } from "react";
import { useAuth } from "@/components/AuthProvider";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { HeartSoundProvider } from "@/components/HeartSound";
import Logo from "@/components/ui/logo"; // ---<<< ╪к┘Е ╪е╪╣╪з╪п╪й ╪з╪│╪к┘К╪▒╪з╪п ┘Е┘Г┘И┘Ж ╪з┘Д┘Д┘И╪м┘И

const Index = () => {
  const [dialogOpen, setDialogOpen] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [btnAnimation, setBtnAnimation] = useState(false);
  const { signOut, user } = useAuth();
  const [photoGridKey, setPhotoGridKey] = useState(0);

  const handleCreateNew = () => {
    setBtnAnimation(true);
    setTimeout(() => setBtnAnimation(false), 300);
    setDialogOpen(true);
  };

  const toggleSidebar = () => setSidebarOpen((prev) => !prev);

  const handlePhotoAdded = () => {
    setPhotoGridKey(prevKey => prevKey + 1);
  };

  return (
    <HeartSoundProvider>
      <div className="min-h-screen bg-background text-foreground">
        {/* ╪▓╪▒ ┘Б╪к╪н/╪е╪║┘Д╪з┘В ╪з┘Д╪┤╪▒┘К╪╖ ╪з┘Д╪м╪з┘Ж╪и┘К */}
        <Button
          variant="ghost"
          size="icon"
          onClick={toggleSidebar}
          className="fixed top-4 right-4 z-50 glass-effect text-gray-700" // [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б glass-effect
        >
          <Menu className="h-5 w-5" />
        </Button>

        {/* ┘В╪з╪ж┘Е╪й ╪з┘Д┘Е╪│╪к╪о╪п┘Е */}
        <div className="fixed top-4 left-4 z-50">
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="ghost" size="icon" className="glass-effect text-gray-700"> {/* [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б glass-effect */}
                <User className="h-5 w-5" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="start" className="w-56 glass-effect text-gray-700 border border-border"> {/* [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б glass-effect */}
              <div className="px-2 py-1.5 text-sm font-medium text-gray-600 truncate">{user?.email}</div>
              <DropdownMenuItem
                onClick={signOut}
                className="text-red-500 focus:text-red-500 cursor-pointer focus:bg-gray-100"
              >
                <LogOut className="mr-2 h-4 w-4" />
                <span>╪к╪│╪м┘К┘Д ╪з┘Д╪о╪▒┘И╪м</span>
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>

        {/* ╪з┘Д╪┤╪▒┘К╪╖ ╪з┘Д╪м╪з┘Ж╪и┘К */}
        <div
          className={`fixed top-0 right-0 h-full bg-black/30 backdrop-blur-md border-l border-gray-800 w-72 transform transition-transform duration-300 ease-in-out z-40 flex flex-col ${
            sidebarOpen ? "translate-x-0" : "translate-x-full"
          }`}
        >
          <div className="flex-1 p-6 pt-20">
            <h3 className="text-gray-300 font-semibold mb-4 text-right">╪з┘Д╪г┘Д╪и┘И┘Е╪з╪к</h3>
            <div id="hashtags-container" className="flex flex-col space-y-3 items-end">
              {/* [┘К╪к╪╖┘Д╪и ┘Е╪▒╪з╪м╪╣╪й PhotoGrid ЁЯФО] PhotoGrid ┘К╪м╪и ╪г┘Ж ┘К╪│╪к╪о╪п┘Е createPortal ┘З┘Ж╪з */}
            </div>
          </div>
        </div>

        {/* ╪╖╪и┘В╪й ╪з┘Д╪к╪╣╪к┘К┘Е ╪╣┘Ж╪п ┘Б╪к╪н ╪з┘Д╪┤╪▒┘К╪╖ ╪з┘Д╪м╪з┘Ж╪и┘К */}
        {sidebarOpen && (
          <div
            className="fixed inset-0 bg-black/10 backdrop-blur-sm z-30"
            onClick={() => setSidebarOpen(false)}
          />
        )}

        {/* ╪з┘Д┘Е╪н╪к┘И┘Й ╪з┘Д╪▒╪ж┘К╪│┘К */}
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
          <div className="text-center mb-8">
             {/* ---<<< ╪к┘Е ╪з┘Д╪╣┘И╪п╪й ┘Д╪з╪│╪к╪о╪п╪з┘Е ┘Е┘Г┘И┘Ж Logo ╪з┘Д┘Е╪│╪к┘И╪▒╪п */}
            <div className="inline-block mb-6 w-40 h-40 sm:w-48 sm:h-48">
              <Logo className="w-full h-full object-contain animate-float" /> {/* [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б animate-float */}
            </div>
            <p className="text-lg text-gray-300 max-w-2xl mx-auto mb-6">
              .. ┘Д╪н╪╕╪з╪к┘Г ╪з┘Д╪│╪╣┘К╪п╪й╪М ┘И╪з┘Д┘Ж╪╣┘Е ╪з┘Д╪м┘Е┘К┘Д╪й ┘Б┘К ╪н┘К╪з╪к┘Г
            </p>

            <div className="relative inline-block">
              <Button
                onClick={handleCreateNew}
                className={`relative px-5 py-3 bg-[#d94550] hover:bg-[#d94550]/90 text-white shadow-lg rounded-lg mx-auto transition-all duration-300 overflow-hidden ${
                  btnAnimation ? "scale-95 shadow-inner" : "hover:scale-105"
                }`}
              >
                <span className="relative z-10 flex items-center">
                  <Plus
                    className={`w-5 h-5 mr-2 transition-transform duration-300 ${
                      btnAnimation ? "rotate-180" : ""
                    }`}
                  />
                  ╪е╪╢╪з┘Б╪й ╪з┘Е╪к┘Ж╪з┘Ж ╪м╪п┘К╪п
                </span>
                <span
                  className="absolute inset-0 rounded-lg bg-[#b73842]/50 animate-inner-pulse z-0" // [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б animate-inner-pulse
                  style={{ transformOrigin: "center" }}
                ></span>
              </Button>
            </div>
          </div>

          <PhotoGrid key={photoGridKey} closeSidebar={() => setSidebarOpen(false)} />

          <CreateNewDialog
            open={dialogOpen}
            onOpenChange={setDialogOpen}
            onPhotoAdded={handlePhotoAdded}
          />

          {/* ╪▓╪▒ ╪з┘Д╪е╪╢╪з┘Б╪й ╪з┘Д╪п╪з╪ж╪▒┘К ┘Е╪╣ ╪к╪г╪л┘К╪▒ ╪з┘Д┘Ж╪и╪╢ */}
          <div className="fixed bottom-6 left-6">
            <div className="absolute inset-0 rounded-full bg-pink-500/10 animate-pulse-slow"></div> {/* [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й CSS тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б animate-pulse-slow */}
            <Button
              onClick={handleCreateNew}
              variant="glass" // [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й Button тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б variant="glass"
              size="circle" // [╪к╪н╪к╪з╪м ┘Е╪▒╪з╪м╪╣╪й Button тЪая╕П] ╪к╪г┘Г╪п ┘Е┘Ж ╪к╪╣╪▒┘К┘Б size="circle"
              className="w-14 h-14 shadow-lg relative"
            >
              <Plus className="w-7 h-7 text-white/70" />
            </Button>
          </div>
        </main>
      </div>
    </HeartSoundProvider>
  );
};

export default Index;

